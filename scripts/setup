#!/bin/bash

set -euo pipefail

readonly dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

pushd "${dir}/../"
trap 'popd' EXIT

./scripts/distclean
./scripts/install-tools
./scripts/generate-certs
./scripts/generate-kubeconfig-kube-proxy
./scripts/generate-kubeconfig-worker
./scripts/generate-kubeconfig-controller-manager
./scripts/generate-kubeconfig-scheduler
./scripts/generate-cni-config
./scripts/generate-service-files
./scripts/download-tools
#generate new code for encryption-config.yaml
#head -c 32 /dev/urandom | base64

vagrant up --parallel

./scripts/setup-etcd
./scripts/setup-controller-services
./scripts/configure-kubectl-on-host
./scripts/setup-kubelet-api-cluster-role
./scripts/setup-worker-services
echo -e "\033[1mFinished. Cluster should be healthy and soon in state ready:\033[0m"
kubectl get componentstatuses
kubectl get nodes
kubectl apply -f manifests/coredns-1.8.yaml
sleep 7
kubectl get pods -l k8s-app=kube-dns -n kube-system
kubectl run busybox --image=busybox:1.28 --command -- sleep 3600
sleep 4
kubectl get pods -l run=busybox
POD_NAME=$(kubectl get pods -l run=busybox -o jsonpath="{.items[0].metadata.name}")
kubectl exec -ti $POD_NAME -- nslookup kubernetes
